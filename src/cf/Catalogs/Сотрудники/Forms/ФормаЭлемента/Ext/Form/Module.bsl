	   
 &НаКлиенте
Процедура ОбновитьФото(Команда)
	СтандартнаяОбработка = Ложь;
	
	ФильтрДиалога = НСтр("ru = 'Файл png (*.png)|*.png'");
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
   	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выбор изображений PNG'");
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Фильтр = ФильтрДиалога;
	
    ОповещениеОЗавершении  = Новый ОписаниеОповещения("ОбработатьФайлНаКлиентеЗавершение", ЭтотОбъект);
    НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении, , , , ПараметрыДиалога,УникальныйИдентификатор);
			
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайлНаКлиентеЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	Если ОписаниеПомещенногоФайла <> Неопределено Тогда             
    	ФайлКартинки = ОписаниеПомещенногоФайла.Адрес;    
	КонецЕсли;                       
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация     

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация     
	
	ФайлКартинки = ПоместитьВоВременноеХранилище(ТекущийОбъект.ФотоСотрудника.Получить(), УникальныйИдентификатор);
	                       
	Компетенции.Параметры.УстановитьЗначениеПараметра("Сотрудник", Объект.Ссылка);
		//ЭлементОтбора = Компетенции.Параметры.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сотрудник");
		//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ЭлементОтбора.Использование = Истина;
		//ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		//ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;          
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЭтоАдресВременногоХранилища(ФайлКартинки) Тогда
		ФайлКартинкиДанные = ПолучитьИзВременногоХранилища(ФайлКартинки);
		ТекущийОбъект.ФотоСотрудника = Новый ХранилищеЗначения(ФайлКартинкиДанные);
	КонецЕсли;

	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры       

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

 
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

 
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

 
&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаСервере
Процедура ПодборНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)                    
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",ложь);	
	ПараметрыФормы.Вставить("Специализация",ОпределитьСпециализацию(Объект.Должность));
	ОткрытьФорму("Справочник.Компетенции.Форма.ФормаВыбора",ПараметрыФормы,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Для каждого ТекЗначение из ВыбранноеЗначение Цикл 
		НовСтрока = Объект.КомпетенцииСотрудника.Добавить();
		НовСтрока.Навык = ТекЗначение;
		НовСтрока.УровеньВладения = ПредопределенноеЗначение("Перечисление.УровеньВладения.ЗнаюХорошо");
	КонецЦикла;
КонецПроцедуры      

&НаСервереБезКонтекста
Функция ОпределитьСпециализацию(Должность)   
	Если Найти(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Должность,"Наименование"),"онсультант") > 0 Тогда
		Возврат Перечисления.СпециализацияСотрудника.Консультирование;
	ИначеЕсли Найти(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Должность,"Наименование"),"азработчик") > 0 Тогда
		Возврат Перечисления.СпециализацияСотрудника.Разработка;
	КонецЕсли;
КонецФункции

// Конец СтандартныеПодсистемы.КонтактнаяИнформация


#КонецОбласти